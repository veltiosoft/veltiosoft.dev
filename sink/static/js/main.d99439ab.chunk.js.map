{"version":3,"sources":["reportWebVitals.ts","components/atoms/log/Log.tsx","pages/logs/Logs.tsx","components/atoms/task/Task.tsx","pages/tracker/Tracker.tsx","repositories/localStrage.ts","components/molecules/header/737414.svg","components/molecules/header/Header.tsx","components/molecules/footer/Footer.tsx","pages/policy/Policy.tsx","pages/settings/Settings.tsx","Sink.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Log","props","taskName","Box","formatDate","logs","length","startHour","Date","start","getHours","endHour","slice","end","formatLogs","ret","i","prev","forEach","log","push","Logs","display","flexDirection","reverse","map","Task","handler","className","justifyContent","Button","onClick","flexGrow","margin","Tracker","repo","setLogs","useState","setTaskName","getTime","time","setTime","getCurrentTaskName","currentTaskName","setCurrentTaskName","getHistory","history","setHistory","switchTask","stopTask","now","act","newHistory","filter","v","addHistory","stopTime","newLog","handleClick_playButton","height","width","disabled","marginY","TextField","id","value","onChange","event","target","label","t","repository","localStorage","setItem","parseInt","getItem","setIsWorking","isWorking","getIsWorking","JSON","stringify","parse","getLogs","Header","src","logo","alt","to","Footer","Policy","href","Settings","prop","PageTemplate","inner","Sink","fallback","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"8MAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,iCCNP,SAASQ,EAAIC,GAA8B,IACtCC,EAAaD,EAAbC,SACR,OACI,eAACC,EAAA,EAAD,gBACOD,KCFR,IAAME,EAAa,SAACC,GACvB,GAAoB,IAAhBA,EAAKC,OAAc,MAAO,GAC9B,IAAMC,EAAoB,IAAIC,KAAKH,EAAK,GAAGI,OAAOC,WAC5CC,EAAkB,IAAIH,KAAKH,EAAKO,OAAO,GAAG,GAAGC,KAAKH,WACxD,MAAM,KAAN,OAAYH,EAAZ,iBAA8BI,EAAU,EAAxC,QAGSG,EAAa,SAACT,GACvB,GAAoB,IAAhBA,EAAKC,OAAc,MAAO,CAAC,IAE/B,IAAMS,EAAgB,CAAC,IACnBC,EAAI,EACJC,EAAO,IAAIT,KAAKH,EAAK,GAAGI,OAAOC,WAenC,OAdAL,EAAKa,SAAQ,SAACC,GACV,IAAMV,EAAQ,IAAID,KAAKW,EAAIV,OAAOC,WAC9BO,IAASR,EACTM,EAAIC,GAAGI,KAAKD,GACa,IAAlBJ,EAAIC,GAAGV,QACdS,EAAIC,GAAGI,KAAKD,GACZF,EAAOR,IAEPO,IACAD,EAAIC,GAAK,GACTD,EAAIC,GAAGI,KAAKD,GACZF,EAAOR,MAGRM,GAGJ,SAASM,EAAKpB,GAA0B,IACnCI,EAASJ,EAATI,KACR,OACI,cAACF,EAAA,EAAD,CAAKmB,QAAQ,OAAOC,cAAc,SAAlC,SACKT,EAAWT,GAAMmB,UAAUC,KAAI,SAAApB,GAAI,OAChC,gCACI,8BAAMD,EAAWC,KAChBA,EAAKmB,UAAUC,KAAI,SAAAN,GAAG,OAAI,cAACnB,EAAD,CAAwBE,SAAUiB,EAAIjB,UAA5BiB,EAAIjB,qB,6BCrCtD,SAASwB,EAAKzB,GAAmE,IAC5EC,EAAsBD,EAAtBC,SAAUyB,EAAY1B,EAAZ0B,QAClB,OACI,eAACxB,EAAA,EAAD,CAAKyB,UAAU,OAAON,QAAQ,OAAOO,eAAe,gBAApD,UACI,cAACC,EAAA,EAAD,CAAQC,QAAS,WAAQ,OAAOJ,EAAQzB,IAAxC,SACI,sBAAM0B,UAAU,iBAAhB,0BAEJ,cAACzB,EAAA,EAAD,CAAK6B,SAAS,IAAIC,OAAO,OAAzB,SAAgC,cAAC9B,EAAA,EAAD,UAAMD,SCH3C,SAASgC,EAAQjC,GAAwF,IACpGkC,EAAwBlC,EAAxBkC,KAAMC,EAAkBnC,EAAlBmC,QAAS/B,EAASJ,EAATI,KADoF,EAE3EgC,mBAAS,IAFkE,mBAEpGnC,EAFoG,KAE1FoC,EAF0F,OAGnFD,mBAASF,EAAKI,WAHqE,mBAGpGC,EAHoG,KAG9FC,EAH8F,OAI7DJ,mBAASF,EAAKO,sBAJ+C,mBAIpGC,EAJoG,KAInFC,EAJmF,OAK7BP,mBAASF,EAAKU,cALe,mBAKpGC,EALoG,KAK3FC,EAL2F,KA6BrGC,EAAa,SAAC9C,GAChB,GAAIyC,IAAoBzC,GAAyB,KAAbA,EAAmB,OAAOoC,EAAY,IAElD,KAApBK,GAA0BM,IArBtB,SAAC/C,GACT0C,EAAmB1C,GACnBiC,EAAKS,mBAAmB1C,GAExB,IAAMsC,EAAOhC,KAAK0C,MAClBT,EAAQD,GACRL,EAAKM,QAAQD,GAEbF,EAAY,IAeZa,CAAIjD,GAZW,SAACA,GAChB,IAAMkD,EAAa,CAAClD,GAAD,mBAAc4C,EAAQO,QAAO,SAAAC,GAAC,OAAIA,IAAMpD,OAAWU,MAAM,EAAG,IAE/EmC,EAAWK,GACXjB,EAAKY,WAAWK,GAUhBG,CAAWrD,IAGT+C,EAAW,WACb,IAAMO,EAAWhD,KAAK0C,MAMhBO,EAAM,CALM,CACdvD,SAAUyC,EACVlC,MAAO+B,EACP3B,IAAK2C,IAEG,mBAAYnD,IAExB+B,EAAQqB,GACRtB,EAAKC,QAAQqB,GAEbb,EAAmB,IACnBT,EAAKS,mBAAmB,KAMtBc,EAAyB,SAACxD,GAC5B8C,EAAW9C,IAOf,OACI,cAACC,EAAA,EAAD,CAAKmB,QAAQ,OAAOM,UAAU,UAA9B,SACI,eAACzB,EAAA,EAAD,CAAKmB,QAAQ,OAAOC,cAAc,SAAlC,UACI,eAACpB,EAAA,EAAD,CAAKmB,QAAQ,OAAOqC,OAAO,OAA3B,UACI,cAACxD,EAAA,EAAD,CAAKyD,MAAM,OAAX,SACI,cAAC9B,EAAA,EAAD,CAAQC,QAVG,WAC3BkB,KASyDY,SAA8B,KAApBlB,EAAnD,SAA2E,sBAAMf,UAAU,iBAAhB,sBAE/E,cAACzB,EAAA,EAAD,CAAK2D,QAAQ,OAAb,SACI,eAAC3D,EAAA,EAAD,oBAAgC,KAApBwC,EAAyBA,EAAkB,mCAG/D,eAACxC,EAAA,EAAD,CAAKmB,QAAQ,OAAOwC,QAAQ,OAA5B,UACI,cAAChC,EAAA,EAAD,CAAQC,QAvBM,WAC1BiB,EAAW9C,IAsBC,iBACA,cAAC6D,EAAA,EAAD,CACIC,GAAG,iBACHC,MAAO/D,EACPgE,SA3EU,SAACC,GAC3B7B,EAAY6B,EAAMC,OAAOH,QA2ETI,MAAM,gBAEd,cAAClE,EAAA,EAAD,CAAKmB,QAAQ,OAAOC,cAAc,SAAlC,SACKuB,EAAQrB,KAAI,SAAA6C,GAAC,OAAI,cAAC5C,EAAD,CAAcxB,SAAUoE,EAAG3C,QAAS+B,GAAzBY,aC5F1C,IAAMC,EAA0B,CACnC9B,QAAS,SAACD,GACNgC,aAAaC,QAAQ,OAArB,UAAgCjC,KAEpCD,QAAS,WACL,OAAOmC,SAASF,aAAaG,QAAQ,SAAW,MAEpD/B,mBAAoB,SAACD,GACjB6B,aAAaC,QAAQ,kBAAmB9B,IAE5CD,mBAAoB,WAChB,OAAO8B,aAAaG,QAAQ,oBAAsB,IAEtDC,aAAc,SAACC,GACXL,aAAaC,QAAQ,YAArB,UAAqCI,KAEzCC,aAAc,WACV,MAA6C,SAAtCN,aAAaG,QAAQ,cAEhC5B,WAAY,SAACD,GACT0B,aAAaC,QAAQ,UAAWM,KAAKC,UAAUlC,KAEnDD,WAAY,WACR,OAAOkC,KAAKE,MAAMT,aAAaG,QAAQ,YAAc,OAEzDvC,QAAS,SAAC/B,GACNmE,aAAaC,QAAQ,OAAQM,KAAKC,UAAU3E,KAEhD6E,QAAS,WACL,OAAOH,KAAKE,MAAMT,aAAaG,QAAQ,SAAW,QChC3C,G,MAAA,IAA0B,oCCMlC,SAASQ,IACZ,OACI,eAAChF,EAAA,EAAD,CAAKyB,UAAU,SAASN,QAAQ,OAAhC,UACI,qBAAK8D,IAAKC,EAAM1B,OAAO,OAAO2B,IAAI,SAClC,cAACnF,EAAA,EAAD,UAAK,cAAC,IAAD,CAAMoF,GAAG,gBAAgB3D,UAAU,MAAnC,uBACL,cAACzB,EAAA,EAAD,UAAK,cAAC,IAAD,CAAMoF,GAAG,aAAa3D,UAAU,MAAhC,oBACL,cAACzB,EAAA,EAAD,UAAK,cAAC,IAAD,CAAMoF,GAAG,iBAAiB3D,UAAU,MAApC,2B,MCNV,SAAS4D,IACZ,OACI,eAACrF,EAAA,EAAD,CAAKyB,UAAU,SAASN,QAAQ,OAAhC,UAEI,cAACnB,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,kCACA,cAAC,IAAD,CAAMoF,GAAG,eAAe3D,UAAU,MAAlC,6ECTL,SAAS6D,IACZ,OACI,eAACtF,EAAA,EAAD,CAAKmB,QAAQ,OAAOC,cAAc,SAAlC,UACI,kGACA,mTAGA,0EACA,+LAGA,0TAGA,mjBAEI,+BACI,6BAAI,mBAAGmE,KAAK,iEAAR,kHACJ,6BAAI,mBAAGA,KAAK,+BAAR,oEAJZ,sQAQA,mDACO,mBAAGA,KAAK,iDAAR,6HADP,4QCnBL,SAASC,EAASC,GACrB,OACI,cAACzF,EAAA,EAAD,CAAKmB,QAAQ,OAAOC,cAAc,SAAlC,SACI,cAACO,EAAA,EAAD,CAAQC,QAAS,WACb6D,EAAKxD,QAAQ,IACbwD,EAAKzD,KAAKC,QAAQ,KAFtB,2BCGZ,SAASyD,EAAa5F,GAClB,OAAO,eAACE,EAAA,EAAD,CAAKmB,QAAQ,OAAOC,cAAc,SAASM,eAAe,gBAAgB8B,OAAO,QAAjF,UACH,cAAC,EAAD,IACA,cAACxD,EAAA,EAAD,CAAK6B,SAAS,IAAd,SACK/B,EAAM6F,UAEX,cAAC,EAAD,OAID,SAASC,IAAQ,IAAD,EACiD1D,mBAASkC,EAAWW,SADrE,mBACZ7E,EADY,KACN+B,EADM,KAGnB,OACI,cAAC,IAAD,UACI,cAAC,WAAD,CAAU4D,SAAU,6CAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,OAAQ,kBAAM,cAACN,EAAD,CAAcC,MAAO,kBAAM,cAAC5D,EAAD,CAASC,KAAMoC,EAAYnC,QAASA,EAAS/B,KAAMA,UAC9H,cAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,aAAaC,OAAQ,kBAAM,cAACN,EAAD,CAAcC,MAAO,kBAAM,cAACzE,EAAD,CAAMhB,KAAMA,UACpF,cAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,eAAeC,OAAQ,kBAAM,cAACN,EAAD,CAAcC,MAAO,kBAAM,cAACL,EAAD,UAC1E,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,iBAAiBC,OAAQ,kBAAM,cAACN,EAAD,CAAcC,MAAO,kBAAM,cAACH,EAAD,CAAUvD,QAASA,EAASD,KAAMoC,UAC9G,cAAC,IAAD,CAAO2B,KAAK,SAASC,OAAQ,kBAAM,cAACN,EAAD,CAAcC,MAAO,kBAAM,cAAC5D,EAAD,CAASC,KAAMoC,EAAYnC,QAASA,EAAS/B,KAAMA,iBC3BrI+F,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAACN,EAAD,MAEFO,SAASC,eAAe,SAM1BhH,M","file":"static/js/main.d99439ab.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport Box from '@material-ui/core/Box'\n\nexport function Log(props: { taskName: string }) {\n    const { taskName } = props\n    return (\n        <Box>\n            - {taskName}\n        </Box>\n    );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport { ILog } from '../../interfaces/ILog';\nimport { Log } from '../../components/atoms/log/Log';\n\nexport const formatDate = (logs: ILog[]): string => {\n    if (logs.length === 0) return '';\n    const startHour: number = new Date(logs[0].start).getHours()\n    const endHour: number = new Date(logs.slice(-1)[0].end).getHours()\n    return `# ${startHour}:00 - ${endHour + 1}:00`;\n}\n\nexport const formatLogs = (logs: ILog[]): ILog[][] => {\n    if (logs.length === 0) return [[]];\n\n    const ret: ILog[][] = [[]]\n    let i = 0\n    let prev = new Date(logs[0].start).getHours()\n    logs.forEach((log: ILog) => {\n        const start = new Date(log.start).getHours()\n        if (prev === start) {\n            ret[i].push(log)\n        } else if (ret[i].length === 0) {\n            ret[i].push(log)\n            prev = start\n        } else {\n            i++\n            ret[i] = []\n            ret[i].push(log)\n            prev = start\n        }\n    })\n    return ret\n}\n\nexport function Logs(props: { logs: ILog[] }) {\n    const { logs } = props\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            {formatLogs(logs).reverse().map(logs =>\n                <div>\n                    <div>{formatDate(logs)}</div>\n                    {logs.reverse().map(log => <Log key={log.taskName} taskName={log.taskName} />)}\n                </div>)}\n        </Box>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\n// import './Task.css';\n\nexport function Task(props: { taskName: string, handler: (taskName: string) => void }) {\n    const { taskName, handler } = props\n    return (\n        <Box className=\"task\" display=\"flex\" justifyContent=\"space-between\">\n            <Button onClick={() => { return handler(taskName) }}>\n                <span className=\"material-icons\">play_arrow</span>\n            </Button>\n            <Box flexGrow=\"1\" margin=\"auto\"><Box>{taskName}</Box></Box>\n        </Box>\n    );\n}\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Task } from '../../components/atoms/task/Task';\nimport { ILog } from '../../interfaces/ILog';\nimport { IRepository } from '../../interfaces/IRepository';\n\n\nexport function Tracker(props: { repo: IRepository, setLogs: Dispatch<SetStateAction<ILog[]>>, logs: ILog[] }) {\n    const { repo, setLogs, logs } = props\n    const [taskName, setTaskName] = useState('')\n    const [time, setTime] = useState(repo.getTime())\n    const [currentTaskName, setCurrentTaskName] = useState(repo.getCurrentTaskName())\n    const [history, setHistory]: [string[], Dispatch<SetStateAction<string[]>>] = useState(repo.getHistory())\n\n    const handleChange_taskName = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTaskName(event.target.value);\n    };\n\n    const act = (taskName: string): void => {\n        setCurrentTaskName(taskName)\n        repo.setCurrentTaskName(taskName)\n\n        const time = Date.now()\n        setTime(time)\n        repo.setTime(time)\n\n        setTaskName('')\n    }\n\n    const addHistory = (taskName: string): void => {\n        const newHistory = [taskName, ...history.filter(v => v !== taskName)].slice(0, 10)\n\n        setHistory(newHistory)\n        repo.setHistory(newHistory)\n    }\n\n    const switchTask = (taskName: string): void => {\n        if (currentTaskName === taskName || taskName === '') { return setTaskName('') };\n\n        if (currentTaskName !== '') { stopTask() }\n\n        act(taskName)\n\n        addHistory(taskName)\n    }\n\n    const stopTask = (): void => {\n        const stopTime = Date.now()\n        const log: ILog = {\n            taskName: currentTaskName,\n            start: time,\n            end: stopTime,\n        }\n        const newLog = [log, ...logs]\n\n        setLogs(newLog)\n        repo.setLogs(newLog)\n\n        setCurrentTaskName('')\n        repo.setCurrentTaskName('')\n    }\n\n    const handleClick_actButton = () => {\n        switchTask(taskName)\n    }\n    const handleClick_playButton = (taskName: string) => {\n        switchTask(taskName)\n    }\n    const handleClick_stopButton = () => {\n        stopTask()\n    }\n\n\n    return (\n        <Box display=\"flex\" className=\"Tracker\">\n            <Box display=\"flex\" flexDirection=\"column\">\n                <Box display=\"flex\" height=\"36px\">\n                    <Box width=\"64px\">\n                        <Button onClick={handleClick_stopButton} disabled={currentTaskName === ''}><span className=\"material-icons\">stop</span></Button>\n                    </Box>\n                    <Box marginY=\"auto\">\n                        <Box>Task: {currentTaskName !== '' ? currentTaskName : 'break now...🍵'}</Box>\n                    </Box>\n                </Box>\n                <Box display=\"flex\" marginY=\"16px\">\n                    <Button onClick={handleClick_actButton}>act</Button>\n                    <TextField\n                        id=\"standard-basic\"\n                        value={taskName}\n                        onChange={handleChange_taskName}\n                        label=\"new task\" />\n                </Box>\n                <Box display=\"flex\" flexDirection=\"column\">\n                    {history.map(t => <Task key={t} taskName={t} handler={handleClick_playButton}></Task>)}\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n","import { IRepository } from '../interfaces/IRepository'\nimport { ILog } from '../interfaces/ILog'\n\nexport const repository: IRepository = {\n    setTime: (time: number) => {\n        localStorage.setItem('time', `${time}`)\n    },\n    getTime: () => {\n        return parseInt(localStorage.getItem('time') || '0')\n    },\n    setCurrentTaskName: (currentTaskName: string) => {\n        localStorage.setItem('currentTaskName', currentTaskName)\n    },\n    getCurrentTaskName: () => {\n        return localStorage.getItem('currentTaskName') || ''\n    },\n    setIsWorking: (isWorking: boolean) => {\n        localStorage.setItem('isWorking', `${isWorking}`)\n    },\n    getIsWorking: () => {\n        return localStorage.getItem('isWorking') === 'true'\n    },\n    setHistory: (history: string[]) => {\n        localStorage.setItem('history', JSON.stringify(history))\n    },\n    getHistory: () => {\n        return JSON.parse(localStorage.getItem('history') || '[]')\n    },\n    setLogs: (logs: ILog[]) => {\n        localStorage.setItem('logs', JSON.stringify(logs))\n    },\n    getLogs: () => {\n        return JSON.parse(localStorage.getItem('logs') || '[]')\n    },\n}","export default __webpack_public_path__ + \"static/media/737414.9f0b264a.svg\";","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport { Link } from 'react-router-dom';\nimport './Header.css';\nimport logo from './737414.svg';\n\nexport function Header() {\n    return (\n        <Box className=\"header\" display=\"flex\">\n            <img src={logo} height=\"100%\" alt=\"sink\" />\n            <Box><Link to=\"/sink/tracker\" className=\"fix\">tracker</Link></Box>\n            <Box><Link to=\"/sink/logs\" className=\"fix\">logs</Link></Box>\n            <Box><Link to=\"/sink/settings\" className=\"fix\">settings</Link></Box>\n        </Box>\n    );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport './Footer.css';\nimport { Link } from 'react-router-dom';\n// import logo from './veltiosoft_logo.svg';\n\nexport function Footer() {\n    return (\n        <Box className=\"footer\" display=\"flex\">\n            {/* <Box><img src={logo} height=\"100%\" /></Box> */}\n            <Box>ver0.3.0</Box>\n            <Box>©Veltiosoft 2021</Box>\n            <Link to=\"/sink/policy\" className=\"fix\">プライバシーポリシー</Link>\n        </Box>\n    );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nexport function Policy() {\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <h2>sinkのデータ利用について</h2>\n            <p>\n                sinkでタスクとして入力したデータはすべてブラウザに保存され，外部に送信されることはありません。\n            </p>\n            <h2>Google Analyticsについて</h2>\n            <p>\n                sinkでは利用状況を把握するためにGoogle Analyticsを利用しています。\n            </p>\n            <p>\n                Google Analytics から提供されるCookie を使用していますが、Google Analytics によって個人を特定する情報は取得していません。\n            </p>\n            <p>\n                Google Analytics の利用により収集されたデータは、Google社のプライバシーポリシーに基づいて管理されています。Google Analyticsの利用規約・プライバシーポリシーについてはGoogle Analytics のホームページでご確認ください。\n                <ul>\n                    <li><a href=\"https://marketingplatform.google.com/about/analytics/terms/jp/\">Google アナリティクス サービス利用規約</a></li>\n                    <li><a href=\"https://policies.google.com/\">Google ポリシーと規約</a></li>\n                </ul>\n                なお、Google Analyticsのサービス利用による損害については、当サイトは責任を負わないものとします。\n            </p>\n            <p>\n                また、<a href=\"https://tools.google.com/dlpage/gaoptout?hl=ja\">Google アナリティクス オプトアウト アドオン</a>を使用することで，Google アナリティクス JavaScript（analytics.js、gtag.js）によるデータの使用を無効にできます。\n            </p>\n        </Box>\n    );\n}\n","import React, { Dispatch, SetStateAction } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { ILog } from '../../interfaces/ILog';\nimport Button from '@material-ui/core/Button';\nimport { IRepository } from '../../interfaces/IRepository';\n\nexport function Settings(prop: { setLogs: Dispatch<SetStateAction<ILog[]>>, repo: IRepository }) {\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <Button onClick={() => {\n                prop.setLogs([])\n                prop.repo.setLogs([])\n            }}>delete Logs</Button>\n        </Box>\n    );\n}\n","import Box from '@material-ui/core/Box';\nimport React, { Dispatch, SetStateAction, Suspense, useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Logs } from './pages/logs/Logs';\nimport { ILog } from './interfaces/ILog';\nimport { Tracker } from './pages/tracker/Tracker';\nimport { repository } from './repositories/localStrage';\nimport { Header } from './components/molecules/header/Header';\nimport { Footer } from './components/molecules/footer/Footer';\nimport { Policy } from './pages/policy/Policy';\nimport { Settings } from './pages/settings/Settings';\n\nfunction PageTemplate(props: { inner: () => JSX.Element }) {\n    return <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" height=\"100vh\">\n        <Header />\n        <Box flexGrow=\"1\">\n            {props.inner()}\n        </Box>\n        <Footer />\n    </Box>\n}\n\nexport function Sink() {\n    const [logs, setLogs]: [ILog[], Dispatch<SetStateAction<ILog[]>>] = useState(repository.getLogs)\n\n    return (\n        <BrowserRouter>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Switch>\n                    <Route exact path=\"/sink/tracker\" render={() => <PageTemplate inner={() => <Tracker repo={repository} setLogs={setLogs} logs={logs} />} />} />\n                    <Route exact path=\"/sink/logs\" render={() => <PageTemplate inner={() => <Logs logs={logs} />} />} />\n                    <Route exact path=\"/sink/policy\" render={() => <PageTemplate inner={() => <Policy />} />} />\n                    <Route exact path=\"/sink/settings\" render={() => <PageTemplate inner={() => <Settings setLogs={setLogs} repo={repository} />} />} />\n                    <Route path=\"/sink/\" render={() => <PageTemplate inner={() => <Tracker repo={repository} setLogs={setLogs} logs={logs} />} />} />\n                </Switch>\n            </Suspense>\n        </BrowserRouter>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Sink } from './Sink';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Sink />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}