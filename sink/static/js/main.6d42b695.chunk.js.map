{"version":3,"sources":["reportWebVitals.ts","components/atoms/log/Log.tsx","pages/logs/Logs.tsx","components/atoms/task/Task.tsx","pages/tracker/Tracker.tsx","repositories/localStrage.ts","components/molecules/header/Header.tsx","components/molecules/Footer/Footer.tsx","Sink.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Log","props","taskName","Box","Logs","logs","formatDate","length","startHour","Date","start","getHours","endHour","slice","end","display","flexDirection","ret","i","prev","forEach","log","push","formatLogs","reverse","map","Task","handler","className","justifyContent","Button","onClick","Tracker","repo","setLogs","useState","setTaskName","getTime","time","setTime","getCurrentTaskName","currentTaskName","setCurrentTaskName","getIsWorking","isWorking","setIsWorking","getHistory","history","setHistory","switchTask","stopTask","now","act","newHistory","filter","v","addHistory","stopTime","newLog","duration","handleClick_playButton","TextField","id","value","onChange","event","target","label","t","repository","localStorage","setItem","parseInt","getItem","JSON","stringify","parse","getLogs","Header","to","Footer","PageTemplate","height","flexGrow","inner","Sink","fallback","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d42b695.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\n\nexport function Log(props: { taskName: string }) {\n    const { taskName } = props\n    return (\n        <Box>\n            {taskName}\n        </Box>\n    );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport { Log as ILog } from '../../interfaces/log';\nimport { Log } from '../../components/atoms/log/Log';\n\nexport function Logs(props: { logs: ILog[] }) {\n    const { logs } = props\n    const formatLogs = (logs: ILog[]): ILog[][] => {\n        if (logs.length === 0) return [[]];\n\n        const ret: ILog[][] = [[]]\n        let i = 0\n        let prev = new Date(logs[0].start).getHours()\n        logs.forEach((log: ILog) => {\n            const start = new Date(log.start).getHours()\n            if (prev === start) {\n                ret[i].push(log)\n            } else if (ret[i].length === 0) {\n                ret[i].push(log)\n                prev = start\n            } else {\n                i++\n                ret[i] = []\n                prev = start\n            }\n        })\n        return ret\n    }\n    const formatDate = (logs: ILog[]): string => {\n        if (logs.length === 0) return '';\n        const startHour: number = new Date(logs[0].start).getHours()\n        const endHour: number = new Date(logs.slice(-1)[0].end).getHours()\n        return `# ${startHour}:00 - ${endHour + 1}:00`;\n    }\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            {formatLogs(logs).reverse().map(logs =>\n                <div>\n                    <div>{formatDate(logs)}</div>\n                    {logs.reverse().map(log => <Log taskName={log.taskName} />)}\n                </div>)}\n        </Box>\n    );\n}\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\nimport './Task.css';\n\nexport function Task(props: { taskName: string, handler: (taskName: string) => void }) {\n    const { taskName, handler } = props\n    return (\n        <Box className=\"task\" display=\"flex\" justifyContent=\"space-between\">\n            <div>{taskName}</div>\n            <Button onClick={() => { return handler(taskName) }}>\n                <span className=\"material-icons\">play_arrow</span>\n            </Button>\n        </Box>\n    );\n}\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Task } from '../../components/atoms/task/Task';\nimport { Log } from '../../interfaces/log';\nimport { IRepository } from '../../interfaces/IRepository';\n\n\nexport function Tracker(props: { repo: IRepository, setLogs: Dispatch<SetStateAction<Log[]>>, logs: Log[] }) {\n    const { repo, setLogs, logs } = props\n    const [taskName, setTaskName] = useState('')\n    const [time, setTime] = useState(repo.getTime())\n    const [currentTaskName, setCurrentTaskName] = useState(repo.getCurrentTaskName())\n    const [isWorking, setIsWorking] = useState(repo.getIsWorking())\n    const [history, setHistory]: [string[], Dispatch<SetStateAction<string[]>>] = useState(repo.getHistory())\n\n    const handleChange_taskName = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTaskName(event.target.value);\n    };\n\n    const act = (taskName: string): void => {\n        setCurrentTaskName(taskName)\n        repo.setCurrentTaskName(taskName)\n\n        const time = Date.now()\n        setTime(time)\n        repo.setTime(time)\n\n        setIsWorking(true)\n        repo.setIsWorking(true)\n\n        setTaskName('')\n    }\n\n    const addHistory = (taskName: string): void => {\n        const newHistory = [taskName, ...history.filter(v => v !== taskName)]\n\n        setHistory(newHistory)\n        repo.setHistory(newHistory)\n    }\n\n    const switchTask = (taskName: string): void => {\n        if (currentTaskName === taskName || taskName === '') { return setTaskName('') };\n\n        if (isWorking) { stopTask() }\n\n        act(taskName)\n\n        addHistory(taskName)\n    }\n\n    const stopTask = (): void => {\n        const stopTime = Date.now()\n        const log: Log = {\n            taskName: currentTaskName,\n            start: time,\n            end: stopTime,\n            duration: stopTime - time,\n        }\n        const newLog = [log, ...logs]\n\n        setLogs(newLog)\n        repo.setLogs(newLog)\n\n        setIsWorking(false)\n        repo.setIsWorking(false)\n\n        setCurrentTaskName('')\n        repo.setCurrentTaskName('')\n    }\n\n    const handleClick_actButton = () => {\n        switchTask(taskName)\n    }\n    const handleClick_playButton = (taskName: string) => {\n        switchTask(taskName)\n    }\n    const handleClick_stopButton = () => {\n        stopTask()\n    }\n\n\n    return (\n        <Box display=\"flex\" className=\"Tracker\">\n            <Box display=\"flex\" flexDirection=\"column\">\n                <Box display=\"flex\">\n                    Task: {currentTaskName}\n                    {isWorking ? <Button onClick={handleClick_stopButton}><span className=\"material-icons\">stop</span></Button> : void 0}\n                </Box>\n                <Box display=\"flex\">\n                    <TextField\n                        id=\"standard-basic\"\n                        value={taskName}\n                        onChange={handleChange_taskName}\n                        label=\"new task\" />\n                    <Button onClick={handleClick_actButton}>act</Button>\n                </Box>\n                <Box display=\"flex\" flexDirection=\"column\">\n                    {history.map(t => <Task taskName={t} handler={handleClick_playButton}></Task>)}\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n","import { IRepository } from '../interfaces/IRepository'\nimport { Log } from '../interfaces/log'\n\nexport const repository: IRepository = {\n    setTime: (time: number) => {\n        localStorage.setItem('time', `${time}`)\n    },\n    getTime: () => {\n        return parseInt(localStorage.getItem('time') || '0')\n    },\n    setCurrentTaskName: (currentTaskName: string) => {\n        localStorage.setItem('currentTaskName', currentTaskName)\n    },\n    getCurrentTaskName: () => {\n        return localStorage.getItem('currentTaskName') || ''\n    },\n    setIsWorking: (isWorking: boolean) => {\n        localStorage.setItem('isWorking', `${isWorking}`)\n    },\n    getIsWorking: () => {\n        return localStorage.getItem('isWorking') === 'true'\n    },\n    setHistory: (history: string[]) => {\n        localStorage.setItem('history', JSON.stringify(history))\n    },\n    getHistory: () => {\n        return JSON.parse(localStorage.getItem('history') || '[]')\n    },\n    setLogs: (logs: Log[]) => {\n        localStorage.setItem('logs', JSON.stringify(logs))\n    },\n    getLogs: () => {\n        return JSON.parse(localStorage.getItem('logs') || '[]')\n    },\n}","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport { Link } from 'react-router-dom';\n\n\nexport function Header() {\n    return (\n        <Box>\n            <Box>sink <Link to=\"/sink/tracker\">tracker</Link> <Link to=\"/sink/logs\">logs</Link></Box>\n        </Box>\n    );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box'\n\n\nexport function Footer() {\n    return (\n        <Box>\n            ver0.1.1\n        </Box>\n    );\n}\n","import Box from '@material-ui/core/Box';\nimport React, { Dispatch, SetStateAction, Suspense, useState } from 'react';\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\nimport { Logs } from './pages/logs/Logs';\nimport { Log } from './interfaces/log';\nimport { Tracker } from './pages/tracker/Tracker';\nimport { repository } from './repositories/localStrage';\nimport { Header } from './components/molecules/header/Header';\nimport { Footer } from './components/molecules/Footer/Footer';\n\nfunction PageTemplate(props: { inner: () => JSX.Element }) {\n    return <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" height=\"100vh\">\n        <Header />\n        <Box flexGrow=\"1\">\n            {props.inner()}\n        </Box>\n        <Footer />\n    </Box>\n}\n\nexport function Sink() {\n    const [logs, setLogs]: [Log[], Dispatch<SetStateAction<Log[]>>] = useState(repository.getLogs)\n\n    return (\n        <BrowserRouter>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Switch>\n                    <Route exact path=\"/sink/tracker\" render={() => <PageTemplate inner={() => <Tracker repo={repository} setLogs={setLogs} logs={logs} />} />} />\n                    <Route exact path=\"/sink/logs\" render={() => <PageTemplate inner={() => <Logs logs={logs} />} />} />\n                    <Route path=\"/sink/\" render={() => <PageTemplate inner={() => <Tracker repo={repository} setLogs={setLogs} logs={logs} />} />} />\n                </Switch>\n            </Suspense>\n        </BrowserRouter>\n    );\n}\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Sink } from './Sink';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Sink />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}