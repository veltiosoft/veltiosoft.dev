(this.webpackJsonpsink=this.webpackJsonpsink||[]).push([[4],{117:function(t,r,n){"use strict";n.r(r),n.d(r,"formatDate",(function(){return s})),n.d(r,"formatLogs",(function(){return u})),n.d(r,"Logs",(function(){return c}));var e=n(82),a=n(2),o=(n(0),n(74));function i(t){var r=t.taskName;return Object(a.jsxs)(o.a,{children:["- ",r]})}var s=function(t){return 0===t.logs.length?"":"# ".concat(t.start,":00 - ").concat(t.start+1,":00")},u=function(t){if(0===t.length)return[{start:0,logs:[]}];var r=new Date(t[0].start).getHours()-1,n=new Date(t[t.length-1].end).getHours();return Object(e.a)(new Array(n-r)).map((function(t,n){return n+r})).map((function(r){return{start:r+1,logs:t.filter((function(t){return r<new Date(t.end).getHours()&&new Date(t.start).getHours()<=r+1}))}})).filter((function(t){return 0!==t.logs.length}))};function c(t){var r=t.logs;return Object(a.jsx)(o.a,{display:"flex",flexDirection:"column",children:u(r).reverse().map((function(t){return Object(a.jsxs)("div",{children:[Object(a.jsx)("div",{children:s(t)}),t.logs.reverse().map((function(t,r){return Object(a.jsx)(i,{taskName:t.taskName},t.start)}))]},t.start)}))})}r.default=c},82:function(t,r,n){"use strict";n.d(r,"a",(function(){return o}));var e=n(28);var a=n(35);function o(t){return function(t){if(Array.isArray(t))return Object(e.a)(t)}(t)||function(t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||Object(a.a)(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}}}]);
//# sourceMappingURL=4.b8da0032.chunk.js.map