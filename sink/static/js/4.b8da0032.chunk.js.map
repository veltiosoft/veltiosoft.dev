{"version":3,"sources":["components/atoms/log/Log.tsx","pages/logs/Logs.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["Log","props","taskName","Box","formatDate","logs","length","start","formatLogs","prev","Date","getHours","end","Array","map","_","i","v","filter","log","Logs","display","flexDirection","reverse","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"kQAGO,SAASA,EAAIC,GAA8B,IACtCC,EAAaD,EAAbC,SACR,OACI,eAACC,EAAA,EAAD,gBACOD,KCGR,IAAME,EAAa,SAACC,GACvB,OAAyB,IAArBA,EAAKA,KAAKC,OAAqB,GAC7B,KAAN,OAAYD,EAAKE,MAAjB,iBAA+BF,EAAKE,MAAQ,EAA5C,QAGSC,EAAa,SAACH,GACvB,GAAoB,IAAhBA,EAAKC,OAAc,MAAO,CAAC,CAACC,MAAM,EAAEF,KAAK,KAE7C,IAAII,EAAO,IAAIC,KAAKL,EAAK,GAAGE,OAAOI,WAAa,EAC5CC,EAAM,IAAIF,KAAKL,EAAKA,EAAKC,OAAQ,GAAGM,KAAKD,WAE7C,OADuB,YAAI,IAAIE,MAAMD,EAAMH,IAAOK,KAAI,SAACC,EAAIC,GAAL,OAAiBA,EAAIP,KAC/DK,KACJ,SAACG,GAAa,MAAO,CACjBV,MAAOU,EAAE,EACTZ,KAAMA,EAAKa,QAAO,SAAAC,GAAG,OAAIF,EAAI,IAAIP,KAAKS,EAAIP,KAAKD,YAAe,IAAID,KAAKS,EAAIZ,OAAOI,YAAcM,EAAE,SAExGC,QACG,SAACb,GAAD,OAA6C,IAArBA,EAAKA,KAAKC,WAIxC,SAASc,EAAKnB,GAA0B,IACnCI,EAASJ,EAATI,KACR,OACI,cAACF,EAAA,EAAD,CAAKkB,QAAQ,OAAOC,cAAc,SAAlC,SACKd,EAAWH,GAAMkB,UAAUT,KAAI,SAAAT,GAAI,OAChC,gCACI,8BAAMD,EAAWC,KAChBA,EAAKA,KAAKkB,UAAUT,KAAI,SAACK,EAAKH,GAAN,OAAY,cAAChB,EAAD,CAAqBE,SAAUiB,EAAIjB,UAAzBiB,EAAIZ,YAF7CF,EAAKE,YAQhBa,a,0FCxCA,SAASI,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIZ,MAAMa,QAAQD,GAAM,OAAO,OAAAE,EAAA,GAAiBF,GDGzC,CAAkBA,IELZ,SAA0BG,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOf,MAAMmB,KAAKJ,GFIvD,CAAgBH,IAAQ,OAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","file":"static/js/4.b8da0032.chunk.js","sourcesContent":["import React from 'react';\nimport Box from '@material-ui/core/Box'\n\nexport function Log(props: { taskName: string }) {\n    const { taskName } = props\n    return (\n        <Box>\n            - {taskName}\n        </Box>\n    );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport { ILog } from '../../interfaces/ILog';\nimport { Log } from '../../components/atoms/log/Log';\n\nexport interface IFormatedLog {\n    start: number;\n    logs: ILog[]\n}\n\nexport const formatDate = (logs: IFormatedLog): string => {\n    if (logs.logs.length === 0) return '';\n    return `# ${logs.start}:00 - ${logs.start + 1}:00`;\n}\n\nexport const formatLogs = (logs: ILog[]): IFormatedLog[] => {\n    if (logs.length === 0) return [{start:0,logs:[]}];\n\n    let prev = new Date(logs[0].start).getHours() - 1\n    let end = new Date(logs[logs.length -1].end).getHours()\n    const base: number[] = [...new Array(end - prev)].map((_ , i:number)=> i + prev)\n    return base.map(\n            (v: number)=>{return {\n                start: v+1,\n                logs: logs.filter(log => v < new Date(log.end).getHours() &&  new Date(log.start).getHours() <= v+1 )\n            }}\n        ).filter(\n            ((logs: IFormatedLog) => logs.logs.length !== 0)\n        )\n}\n\nexport function Logs(props: { logs: ILog[] }) {\n    const { logs } = props\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            {formatLogs(logs).reverse().map(logs =>\n                <div key={logs.start}>\n                    <div>{formatDate(logs)}</div>\n                    {logs.logs.reverse().map((log, i) => <Log key={log.start} taskName={log.taskName} />)}\n                </div>)}\n        </Box>\n    );\n}\n\nexport default Logs\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}