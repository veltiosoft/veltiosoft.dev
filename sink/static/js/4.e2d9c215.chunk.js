(this.webpackJsonpsink=this.webpackJsonpsink||[]).push([[4],{117:function(t,n,r){"use strict";r.r(n),r.d(n,"formatDate",(function(){return c})),r.d(n,"formatLogs",(function(){return s})),r.d(n,"Logs",(function(){return u}));var e=r(82),a=r(2),o=(r(0),r(74));function i(t){var n=t.taskName;return Object(a.jsxs)(o.a,{whiteSpace:"nowrap",children:["- ",n]})}var c=function(t){return 0===t.logs.length?"":"# ".concat((t.start+9)%24,":00 - ").concat((t.start+9+1)%24,":00")},s=function(t){if(0===t.length)return[{start:0,logs:[]}];var n=function(t){return parseInt((t/36e5).toString())},r=n(t[t.length-1].start)-1,a=n(t[0].end);return Object(e.a)(new Array(a-r)).map((function(t,n){return n+r})).map((function(r){return{start:r+1,logs:t.filter((function(t){return r<n(t.end)&&n(t.start)<=r+1}))}})).filter((function(t){return 0!==t.logs.length}))};function u(t){var n=t.logs;return Object(a.jsx)(o.a,{display:"flex",flexDirection:"column",padding:"8px",overflow:"hidden",children:Object(a.jsx)(o.a,{display:"flex",flexDirection:"column",overflow:"scroll",children:s(n).map((function(t){return Object(a.jsxs)("div",{children:[Object(a.jsx)("div",{children:c(t)}),t.logs.reverse().map((function(t,n){return Object(a.jsx)(i,{taskName:t.taskName},t.start)}))]},t.start)}))})})}n.default=u},82:function(t,n,r){"use strict";r.d(n,"a",(function(){return o}));var e=r(28);var a=r(35);function o(t){return function(t){if(Array.isArray(t))return Object(e.a)(t)}(t)||function(t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||Object(a.a)(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}}}]);
//# sourceMappingURL=4.e2d9c215.chunk.js.map