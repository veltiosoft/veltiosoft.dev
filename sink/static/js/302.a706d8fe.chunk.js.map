{"version":3,"file":"static/js/302.a706d8fe.chunk.js","mappings":"kRAGO,SAASA,EAAIC,GAChB,IAAQC,EAAaD,EAAbC,SACR,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,WAAW,SAAQC,SAAA,CAAC,KAClBJ,IAGf,CCAO,IAAMK,EAAa,SAACC,GACvB,OAAyB,IAArBA,EAAKA,KAAKC,OAAqB,GAC7B,KAANC,QAAaF,EAAKG,MAAQ,GAAK,GAAE,UAAAD,QAAUF,EAAKG,MAAQ,EAAI,GAAK,GAAE,MACvE,EAEaC,EAAa,SAACJ,GACvB,GAAoB,IAAhBA,EAAKC,OAAc,MAAO,CAAC,CAAEE,MAAO,EAAGH,KAAM,KACjD,IAAMK,EAAc,SAACC,GAAmB,OAAKC,UAAUD,EAAW,MAAqBE,WAAW,EAC9FC,EAAOJ,EAAYL,EAAKA,EAAKC,OAAS,GAAGE,OAAS,EAClDO,EAAML,EAAYL,EAAK,GAAGU,KAE9B,OADuBC,EAAAA,EAAAA,GAAI,IAAIC,MAAMF,EAAMD,IAAOI,KAAI,SAACC,EAAGC,GAAS,OAAKA,EAAIN,CAAI,IACpEI,KACR,SAACG,GACG,MAAO,CACHb,MAAOa,EAAI,EACXhB,KAAMA,EAAKiB,QAAO,SAAAC,GAAG,OAAIF,EAAIX,EAAYa,EAAIR,MAAQL,EAAYa,EAAIf,QAAUa,EAAI,CAAC,IAE5F,IACFC,QACG,SAACjB,GAAkB,OAA0B,IAArBA,EAAKA,KAAKC,MAAY,GAEvD,EAEO,SAASkB,EAAK1B,GACjB,IAAQO,EAASP,EAATO,KACR,OACIoB,EAAAA,EAAAA,KAACxB,EAAAA,EAAG,CAACyB,QAAQ,OAAOC,cAAc,SAASC,QAAQ,MAAMC,SAAS,SAAQ1B,UACtEsB,EAAAA,EAAAA,KAACxB,EAAAA,EAAG,CAACyB,QAAQ,OAAOC,cAAc,SAASE,SAAS,SAAQ1B,SACvDM,EAAWJ,GAAMa,KAAI,SAAAb,GAAI,OACtBL,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIsB,EAAAA,EAAAA,KAAA,OAAAtB,SAAMC,EAAWC,KAChBA,EAAKA,KAAKyB,UAAUZ,KAAI,SAACK,EAAKH,GAAC,OAAKK,EAAAA,EAAAA,KAAC5B,EAAG,CAAiBE,SAAUwB,EAAIxB,UAAzBwB,EAAIf,MAAiC,MAF9EH,EAAKG,MAGT,OAI1B,CAEA,O","sources":["components/atoms/log/Log.tsx","pages/logs/Logs.tsx"],"sourcesContent":["import React from 'react';\nimport Box from '@material-ui/core/Box'\n\nexport function Log(props: { taskName: string }) {\n    const { taskName } = props\n    return (\n        <Box whiteSpace=\"nowrap\">\n            - {taskName}\n        </Box>\n    );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport { ILog } from '../../interfaces/ILog';\nimport { Log } from '../../components/atoms/log/Log';\n\nexport interface IFormatedLog {\n    start: number;\n    logs: ILog[]\n}\n\nexport const formatDate = (logs: IFormatedLog): string => {\n    if (logs.logs.length === 0) return '';\n    return `# ${(logs.start + 9) % 24}:00 - ${(logs.start + 9 + 1) % 24}:00`;\n}\n\nexport const formatLogs = (logs: ILog[]): IFormatedLog[] => {\n    if (logs.length === 0) return [{ start: 0, logs: [] }];\n    const toEpochHour = (epochSecond: number) => parseInt((epochSecond / (1000 * 60 * 60)).toString())\n    let prev = toEpochHour(logs[logs.length - 1].start) - 1\n    let end = toEpochHour(logs[0].end)\n    const base: number[] = [...new Array(end - prev)].map((_, i: number) => i + prev)\n    return base.map(\n        (v: number) => {\n            return {\n                start: v + 1,\n                logs: logs.filter(log => v < toEpochHour(log.end) && toEpochHour(log.start) <= v + 1)\n            }\n        }\n    ).filter(\n        ((logs: IFormatedLog) => logs.logs.length !== 0)\n    )\n}\n\nexport function Logs(props: { logs: ILog[] }) {\n    const { logs } = props\n    return (\n        <Box display=\"flex\" flexDirection=\"column\" padding=\"8px\" overflow=\"hidden\">\n            <Box display=\"flex\" flexDirection=\"column\" overflow=\"scroll\">\n                {formatLogs(logs).map(logs =>\n                    <div key={logs.start}>\n                        <div>{formatDate(logs)}</div>\n                        {logs.logs.reverse().map((log, i) => <Log key={log.start} taskName={log.taskName} />)}\n                    </div>)}\n            </Box>\n        </Box>\n    );\n}\n\nexport default Logs\n"],"names":["Log","props","taskName","_jsxs","Box","whiteSpace","children","formatDate","logs","length","concat","start","formatLogs","toEpochHour","epochSecond","parseInt","toString","prev","end","_toConsumableArray","Array","map","_","i","v","filter","log","Logs","_jsx","display","flexDirection","padding","overflow","reverse"],"sourceRoot":""}