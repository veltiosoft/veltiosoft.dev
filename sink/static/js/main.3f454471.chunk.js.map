{"version":3,"sources":["reportWebVitals.ts","components/atoms/log/Log.tsx","pages/logs/Logs.tsx","components/atoms/task/Task.tsx","pages/tracker/Tracker.tsx","repositories/localStrage.ts","components/molecules/header/737414.svg","components/molecules/header/Header.tsx","components/molecules/footer/Footer.tsx","pages/policy/Policy.tsx","pages/settings/Settings.tsx","Sink.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Log","props","taskName","Box","formatDate","logs","length","startHour","Date","start","getHours","endHour","slice","end","formatLogs","ret","i","prev","forEach","log","push","Logs","display","flexDirection","reverse","map","Task","task","actHandler","pinHandler","className","justifyContent","Button","onClick","color","isPinned","flexGrow","margin","Tracker","repo","setLogs","historyLimit","useState","setTaskName","getTime","time","setTime","getCurrentTaskName","currentTaskName","setCurrentTaskName","getHistory","history","setHistory","switchTask","stopTask","now","act","filter","v","indexedHistory","index","pinnedHistory","console","unPinnedHistory","newHistory","sort","a","b","addHistory","stopTime","newLog","handleClick_playButton","handleClick_pinButton","height","width","disabled","marginY","marginX","type","event","preventDefault","TextField","id","value","onChange","target","label","t","repository","localStorage","setItem","parseInt","getItem","JSON","stringify","parse","getLogs","setHistoryLimit","limit","getHistoryLimit","Header","src","logo","alt","to","Footer","Policy","href","Settings","prop","PageTemplate","inner","Sink","fallback","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f454471.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport Box from '@material-ui/core/Box'\n\nexport function Log(props: { taskName: string }) {\n    const { taskName } = props\n    return (\n        <Box>\n            - {taskName}\n        </Box>\n    );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport { ILog } from '../../interfaces/ILog';\nimport { Log } from '../../components/atoms/log/Log';\n\nexport const formatDate = (logs: ILog[]): string => {\n    if (logs.length === 0) return '';\n    const startHour: number = new Date(logs[0].start).getHours()\n    const endHour: number = new Date(logs.slice(-1)[0].end).getHours()\n    return `# ${startHour}:00 - ${endHour + 1}:00`;\n}\n\nexport const formatLogs = (logs: ILog[]): ILog[][] => {\n    if (logs.length === 0) return [[]];\n\n    const ret: ILog[][] = [[]]\n    let i = 0\n    let prev = new Date(logs[0].start).getHours()\n    logs.forEach((log: ILog) => {\n        const start = new Date(log.start).getHours()\n        if (prev === start) {\n            ret[i].push(log)\n        } else if (ret[i].length === 0) {\n            ret[i].push(log)\n            prev = start\n        } else {\n            i++\n            ret[i] = []\n            ret[i].push(log)\n            prev = start\n        }\n    })\n    return ret\n}\n\nexport function Logs(props: { logs: ILog[] }) {\n    const { logs } = props\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            {formatLogs(logs).reverse().map(logs =>\n                <div key={logs[0]?.start}>\n                    <div>{formatDate(logs)}</div>\n                    {logs.reverse().map((log, i) => <Log key={log.start} taskName={log.taskName} />)}\n                </div>)}\n        </Box>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\nimport { IHistory } from '../../../interfaces/IHistory';\n// import './Task.css';\n\ninterface Props {\n    task: IHistory\n    actHandler: (taskName: string) => void\n    pinHandler: (taskName: string) => void\n}\n\nexport function Task(props: Props) {\n    const { task, actHandler, pinHandler } = props\n    return (\n        <Box className=\"task\" display=\"flex\" justifyContent=\"space-between\">\n            <Button onClick={() => { return actHandler(task.taskName) }}>\n                <span className=\"material-icons\">play_arrow</span>\n            </Button>\n            <Button onClick={() => { return pinHandler(task.taskName) }} color={task.isPinned ? \"primary\" : \"default\"}>\n                <span className=\"material-icons\">push_pin</span>\n            </Button>\n            <Box flexGrow=\"1\" margin=\"auto\"><Box>{task.taskName}</Box></Box>\n        </Box>\n    );\n}\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Task } from '../../components/atoms/task/Task';\nimport { ILog } from '../../interfaces/ILog';\nimport { IRepository } from '../../interfaces/IRepository';\nimport { IHistory } from '../../interfaces/IHistory';\n\ninterface Props {\n    repo: IRepository;\n    setLogs: Dispatch<SetStateAction<ILog[]>>;\n    logs: ILog[];\n    historyLimit: number;\n}\n\nexport function Tracker(props: Props) {\n    const { repo, setLogs, logs, historyLimit } = props;\n\n    const [taskName, setTaskName] = useState('')\n    const [time, setTime] = useState(repo.getTime())\n    const [currentTaskName, setCurrentTaskName] = useState(repo.getCurrentTaskName())\n    const [history, setHistory]: [IHistory[], Dispatch<SetStateAction<IHistory[]>>] = useState(repo.getHistory())\n\n    const handleChange_taskName = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTaskName(event.target.value);\n    };\n\n    const act = (taskName: string): void => {\n        setCurrentTaskName(taskName)\n        repo.setCurrentTaskName(taskName)\n\n        const time = Date.now()\n        setTime(time)\n        repo.setTime(time)\n\n        setTaskName('')\n    }\n\n    const addHistory = (taskName: string): void => {\n        const isPinned = history.filter(v => v.taskName === taskName)[0]?.isPinned\n        const indexedHistory = [{ taskName: taskName, isPinned: !!isPinned }, ...history.filter(v => v.taskName !== taskName)].map((v, i) => { return { ...v, index: i } })\n        const pinnedHistory = indexedHistory.filter(v => v.isPinned)\n        console.log(pinnedHistory)\n        const unPinnedHistory = indexedHistory.filter(v => !v.isPinned).slice(0, historyLimit - pinnedHistory.length)\n        console.log(unPinnedHistory)\n        const newHistory = [...unPinnedHistory, ...pinnedHistory].sort((a, b) => a.index - b.index)\n\n        setHistory(newHistory)\n        repo.setHistory(newHistory)\n    }\n\n    const switchTask = (taskName: string): void => {\n        if (currentTaskName === taskName || taskName === '') { return setTaskName('') };\n\n        if (currentTaskName !== '') { stopTask() }\n\n        act(taskName)\n\n        addHistory(taskName)\n    }\n\n    const stopTask = (): void => {\n        const stopTime = Date.now()\n        const log: ILog = {\n            taskName: currentTaskName,\n            start: time,\n            end: stopTime,\n        }\n        const newLog = [log, ...logs]\n\n        setLogs(newLog)\n        repo.setLogs(newLog)\n\n        setCurrentTaskName('')\n        repo.setCurrentTaskName('')\n    }\n\n    const handleClick_actButton = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        event.preventDefault()\n        switchTask(taskName)\n    }\n    const handleClick_playButton = (taskName: string) => {\n        switchTask(taskName)\n    }\n    const handleClick_pinButton = (taskName: string) => {\n        const newHistory = [...history]\n        newHistory.filter(task => task.taskName === taskName)[0].isPinned = !newHistory.filter(task => task.taskName === taskName)[0].isPinned\n        setHistory(newHistory)\n    }\n    const handleClick_stopButton = () => {\n        stopTask()\n    }\n\n\n    return (\n        <Box display=\"flex\" className=\"Tracker\">\n            <Box display=\"flex\" flexDirection=\"column\">\n                <Box display=\"flex\" height=\"36px\">\n                    <Box width=\"64px\">\n                        <Button onClick={handleClick_stopButton} disabled={currentTaskName === ''}><span className=\"material-icons\">stop</span></Button>\n                    </Box>\n                    <Box marginY=\"auto\">\n                        <Box>Task: {currentTaskName !== '' ? currentTaskName : 'break now...🍵'}</Box>\n                    </Box>\n                </Box>\n                <Box display=\"flex\" marginY=\"16px\" flexDirection=\"row\">\n                    <form className=\"task-form\">\n                        <Box marginY=\"auto\" marginX=\"0px\" width=\"64px\"><Button type=\"submit\" onClick={handleClick_actButton}>act</Button></Box>\n                        <TextField\n                            id=\"standard-basic\"\n                            value={taskName}\n                            onChange={handleChange_taskName}\n                            label=\"new task\" />\n                    </form>\n                </Box>\n                <Box display=\"flex\" flexDirection=\"column\">\n                    {history.map(t => <Task key={t.taskName} task={t} actHandler={handleClick_playButton} pinHandler={handleClick_pinButton}></Task>)}\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n","import { IRepository } from '../interfaces/IRepository';\nimport { ILog } from '../interfaces/ILog';\nimport { IHistory } from '../interfaces/IHistory';\n\nexport const repository: IRepository = {\n    setTime: (time: number) => {\n        localStorage.setItem('time', `${time}`)\n    },\n    getTime: () => {\n        return parseInt(localStorage.getItem('time') || '0')\n    },\n    setCurrentTaskName: (currentTaskName: string) => {\n        localStorage.setItem('currentTaskName', currentTaskName)\n    },\n    getCurrentTaskName: () => {\n        return localStorage.getItem('currentTaskName') || ''\n    },\n    setHistory: (history: IHistory[]) => {\n        localStorage.setItem('history', JSON.stringify(history))\n    },\n    getHistory: () => {\n        // 後方互換性のために残す，ver 1.0.0 になったら消しても良さそう．\n        const history = JSON.parse(localStorage.getItem('history') || '[]')\n        if (history[0] !== void 0 && typeof (history[0]) === 'string') {\n            return history.map((taskName: string) => { return { taskName: taskName, isPinned: false } })\n        }\n        return history\n    },\n    setLogs: (logs: ILog[]) => {\n        localStorage.setItem('logs', JSON.stringify(logs))\n    },\n    getLogs: () => {\n        return JSON.parse(localStorage.getItem('logs') || '[]')\n    },\n    setHistoryLimit: (limit: number) => {\n        localStorage.setItem('limit', `${limit}`)\n    },\n    getHistoryLimit: () => {\n        return parseInt(localStorage.getItem('limit') || '10')\n    },\n}","export default __webpack_public_path__ + \"static/media/737414.9f0b264a.svg\";","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport { Link } from 'react-router-dom';\nimport './Header.css';\nimport logo from './737414.svg';\n\nexport function Header() {\n    return (\n        <Box className=\"header\" display=\"flex\">\n            <img src={logo} height=\"100%\" alt=\"sink\" />\n            <Box><Link to=\"/sink/tracker\" className=\"fix\">tracker</Link></Box>\n            <Box><Link to=\"/sink/logs\" className=\"fix\">logs</Link></Box>\n            <Box><Link to=\"/sink/settings\" className=\"fix\">settings</Link></Box>\n        </Box>\n    );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport './Footer.css';\nimport { Link } from 'react-router-dom';\n// import logo from './veltiosoft_logo.svg';\n\nexport function Footer() {\n    return (\n        <Box className=\"footer\" display=\"flex\">\n            {/* <Box><img src={logo} height=\"100%\" /></Box> */}\n            <Box>ver0.4.1</Box>\n            <Box>©Veltiosoft 2021</Box>\n            <Link to=\"/sink/policy\" className=\"fix\">プライバシーポリシー</Link>\n        </Box>\n    );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nexport function Policy() {\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <h2>sinkのデータ利用について</h2>\n            <p>\n                sinkでタスクとして入力したデータはすべてブラウザに保存され，外部に送信されることはありません。\n            </p>\n            <h2>Google Analyticsについて</h2>\n            <p>\n                sinkでは利用状況を把握するためにGoogle Analyticsを利用しています。\n            </p>\n            <p>\n                Google Analytics から提供されるCookie を使用していますが、Google Analytics によって個人を特定する情報は取得していません。\n            </p>\n            <p>\n                Google Analytics の利用により収集されたデータは、Google社のプライバシーポリシーに基づいて管理されています。Google Analyticsの利用規約・プライバシーポリシーについてはGoogle Analytics のホームページでご確認ください。\n                <ul>\n                    <li><a href=\"https://marketingplatform.google.com/about/analytics/terms/jp/\">Google アナリティクス サービス利用規約</a></li>\n                    <li><a href=\"https://policies.google.com/\">Google ポリシーと規約</a></li>\n                </ul>\n                なお、Google Analyticsのサービス利用による損害については、当サイトは責任を負わないものとします。\n            </p>\n            <p>\n                また、<a href=\"https://tools.google.com/dlpage/gaoptout?hl=ja\">Google アナリティクス オプトアウト アドオン</a>を使用することで，Google アナリティクス JavaScript（analytics.js、gtag.js）によるデータの使用を無効にできます。\n            </p>\n        </Box>\n    );\n}\n","import React, { Dispatch, SetStateAction } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { ILog } from '../../interfaces/ILog';\nimport { IRepository } from '../../interfaces/IRepository';\n\ninterface Prop {\n    setLogs: Dispatch<SetStateAction<ILog[]>>;\n    repo: IRepository;\n    setHistoryLimit: Dispatch<SetStateAction<number>>;\n    historyLimit: number;\n}\n\nexport function Settings(prop: Prop) {\n    const handleChange_historyLimit = (event: React.ChangeEvent<HTMLInputElement>) => {\n        prop.setHistoryLimit(parseInt(event.target.value) || 0);\n    };\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" flexDirection=\"column\">\n                <Button onClick={() => {\n                    prop.setLogs([])\n                    prop.repo.setLogs([])\n                }}>delete Logs</Button>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"column\">\n                <TextField\n                    id=\"standard-basic\"\n                    value={prop.historyLimit}\n                    onChange={handleChange_historyLimit}\n                    label=\"HistoryLimit\" />\n            </Box>\n        </Box>\n    );\n}\n","import Box from '@material-ui/core/Box';\nimport React, { Dispatch, SetStateAction, Suspense, useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Logs } from './pages/logs/Logs';\nimport { ILog } from './interfaces/ILog';\nimport { Tracker } from './pages/tracker/Tracker';\nimport { repository } from './repositories/localStrage';\nimport { Header } from './components/molecules/header/Header';\nimport { Footer } from './components/molecules/footer/Footer';\nimport { Policy } from './pages/policy/Policy';\nimport { Settings } from './pages/settings/Settings';\n\nfunction PageTemplate(props: { inner: () => JSX.Element }) {\n    return <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" height=\"100vh\">\n        <Header />\n        <Box flexGrow=\"1\">\n            {props.inner()}\n        </Box>\n        <Footer />\n    </Box>\n}\n\nexport function Sink() {\n    const [logs, setLogs]: [ILog[], Dispatch<SetStateAction<ILog[]>>] = useState(repository.getLogs)\n    const [historyLimit, setHistoryLimit]: [number, Dispatch<SetStateAction<number>>] = useState(repository.getHistoryLimit())\n    return (\n        <BrowserRouter>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Switch>\n                    <Route exact path=\"/sink/tracker\" render={() => <PageTemplate inner={() => <Tracker repo={repository} setLogs={setLogs} logs={logs} historyLimit={historyLimit} />} />} />\n                    <Route exact path=\"/sink/logs\" render={() => <PageTemplate inner={() => <Logs logs={logs} />} />} />\n                    <Route exact path=\"/sink/policy\" render={() => <PageTemplate inner={() => <Policy />} />} />\n                    <Route exact path=\"/sink/settings\" render={() => <PageTemplate inner={() => <Settings setLogs={setLogs} repo={repository} historyLimit={historyLimit} setHistoryLimit={setHistoryLimit} />} />} />\n                    <Route path=\"/sink/\" render={() => <PageTemplate inner={() => <Tracker repo={repository} setLogs={setLogs} logs={logs} historyLimit={historyLimit} />} />} />\n                </Switch>\n            </Suspense>\n        </BrowserRouter>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Sink } from './Sink';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Sink />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}